#+TITLE: DTOS
#+DESCRIPTION: A post-installation script to install DT's xmonad desktop on an Arch-based distro.
#+AUTHOR: Derek Taylor (DistroTube)
#+PROPERTY: header-args :tangle dtos.sh
#+STARTUP: showeverything

* TABLE OF CONTENT :toc:
- [[#about-dtos][About DTOS]]
- [[#features-to-add-in-the-future][Features to add in the future:]]
- [[#shebang-plus-comments][Shebang plus comments]]
- [[#check-that-user-is-not-root][Check that user is NOT root!]]
- [[#a-function-for-errors][A function for errors]]
- [[#sync-the-repos-and-install-dialog][Sync the repos and install 'dialog']]
- [[#welcome-message][Welcome message]]
- [[#asking-user-to-confirm-choice-to-install-dtos][Asking user to confirm choice to install DTOS.]]
- [[#adding-dtos-repo-to-pacmanconf][Adding DTOS repo to pacman.conf.]]
- [[#adding-keyservers-to-gpgconf][Adding keyservers to gpg.conf.]]
- [[#receiving-the-pgp-key][Receiving the PGP key]]
- [[#install-the-packages-from-repositories][Install the packages from repositories]]
- [[#copy-configs-over-from-etcdtos-into-home][Copy configs over from /etc/dtos into $HOME]]
- [[#install-doom-emacs][Install Doom Emacs]]
- [[#copy-pacman-hooks][Copy pacman hooks]]
- [[#compiling-xmonad][Compiling xmonad]]
- [[#compiling-the-xmonadctl-script][Compiling the xmonadctl script]]
- [[#set-default-user-shell][Set default USER shell]]
- [[#message-stating-that-the-installation-is-complete][Message stating that the installation is complete!]]

* About DTOS
#+CAPTION: DTOS Scrot
#+ATTR_HTML: :alt DTOS scrot :title DTOS Scrot :align left
[[https://gitlab.com/dwt1/dotfiles/-/raw/master/.screenshots/dtos-thumb-01.png]]

DTOS is the name that I have chosen for my installation script that will deploy my Xmonad config, my Emacs config, as well as associated programs that are needed to create a proper "desktop" experience.  The programs that will be installed include Xmonad, Xmobar, Doom Emacs, Fish and other programs needed to recreate DT's XMonad desktop.

=NOTE:= This script can take a long time to complete since it will install more than 300 packages.  Make sure that ParallelDownloads is enabled in your pacman.conf for faster download times!

#+begin_example
In /etc/pacman.conf...

ParallelDownloads = 5
#+end_example

* Features to add in the future:
+ Sddm is installed but we don't enable it, because most distros already have a login manager.  But I'd like to disable the currently enabled login manager and enable sddm.
+ To fix Doom Emacs not launching correctly on first attempt: killall emacs && /usr/bin/emacs --daemon &

* Shebang plus comments
#+begin_src bash :shebang "#!/usr/bin/env bash"
#  ____ _____ ___  ____
# |  _ \_   _/ _ \/ ___|   Derek Taylor (DistroTube)
# | | | || || | | \___ \   http://www.youtube.com/c/DistroTube
# | |_| || || |_| |___) |  http://www.gitlab.com/dwt1/dtos
# |____/ |_| \___/|____/
#
# NAME: DTOS
# DESC: An installation and deployment script for DT's Xmonad desktop.
# WARNING: Run this script at your own risk.
# DEPENDENCIES: dialog

#+end_src
* Check that user is NOT root!
Don't run this script as root!  This is done for safety reasons.  This script makes a lot of changes to the $HOME of the $USER of this script.  For obvious reasons, we want $USER to not be 'root' and $HOME not to be '/root'.  Instead, run this script as a normal user.  You will be asked to enter a sudo password at several points during the installation.

#+begin_src bash
if [ "$(id -u)" = 0 ]; then
    echo "##################################################################"
    echo "This script MUST NOT be run as root user since it makes changes"
    echo "to the \$HOME directory of the \$USER executing this script."
    echo "The \$HOME directory of the root user is, of course, '/root'."
    echo "We don't want to mess around in there. So run this script as a"
    echo "normal user. You will be asked for a sudo password when necessary."
    echo "##################################################################"
    exit 1
fi
#+end_src

* A function for errors
#+begin_src bash
error() { \
    clear; printf "ERROR:\\n%s\\n" "$1" >&2; exit 1;
}
#+end_src

* Sync the repos and install 'dialog'
#+begin_src bash
echo "################################################################"
echo "## Syncing the repos and installing 'dialog' if not installed ##"
echo "################################################################"
sudo pacman --noconfirm --needed -Sy dialog || error "Error syncing the repos."
#+end_src

* Welcome message
#+begin_src bash
welcome() { \
    dialog --colors --title "\Z7\ZbInstalling DTOS!" --msgbox "\Z4This is a script that will install what I sarcastically call DTOS (DT's operating system).  It's really just an installation script for those that want to try out my XMonad desktop.  We will add DTOS repos to Pacman and install the XMonad tiling window manager, the Xmobar panel, the Alacritty terminal, the Fish shell, Doom Emacs and many other essential programs needed to make my dotfiles work correctly.\\n\\n-DT (Derek Taylor, aka DistroTube)" 16 60

    dialog --colors --title "\Z7\ZbStay near your computer!" --yes-label "Continue" --no-label "Exit" --yesno "\Z4This script is not allowed to be run as root, but you will be asked to enter your sudo password at various points during this installation. This is to give PACMAN the necessary permissions to install the software.  So stay near the computer." 8 60
}

welcome || error "User choose to exit."
#+end_src

* Asking user to confirm choice to install DTOS.
#+begin_src bash
lastchance() { \
    dialog --colors --title "\Z7\ZbInstalling DTOS!" --msgbox "\Z4WARNING! The DTOS installation script is currently in public beta testing. There are almost certainly errors in it; therefore, it is strongly recommended that you not install this on production machines. It is recommended that you try this out in either a virtual machine or on a test machine." 16 60

    dialog --colors --title "\Z7\ZbAre You Sure You Want To Do This?" --yes-label "Begin Installation" --no-label "Exit" --yesno "\Z4Shall we begin installing DTOS?" 8 60 || { clear; exit 1; }
}

lastchance || error "User choose to exit."
#+end_src

* Adding DTOS repo to pacman.conf.
#+begin_src bash
addrepo() { \
    echo "#########################################################"
    echo "## Adding the DTOS core repository to /etc/pacman.conf ##"
    echo "#########################################################"
    grep -qxF "[dtos-core-repo]" /etc/pacman.conf ||
        (echo "[dtos-core-repo]"; echo "SigLevel = Required DatabaseOptional"; echo "Server = https://gitlab.com/dwt1/\$repo/-/raw/main/\$arch") | sudo tee -a /etc/pacman.conf
}

addrepo || error "Error adding DTOS repo to /etc/pacman.conf."
#+end_src

* Adding keyservers to gpg.conf.
#+begin_src bash
addkeyserver() { \
    echo "#######################################################"
    echo "## Adding keyservers to /etc/pacman.d/gnupg/gpg.conf ##"
    echo "#######################################################"
    grep -qxF "keyserver.ubuntu.com:80" /etc/pacman.d/gnupg/gpg.conf || echo "keyserver hkp://keyserver.ubuntu.com:80" | sudo tee -a /etc/pacman.d/gnupg/gpg.conf
    grep -qxF "keyserver.ubuntu.com:443" /etc/pacman.d/gnupg/gpg.conf || echo "keyserver hkps://keyserver.ubuntu.com:443" | sudo tee -a /etc/pacman.d/gnupg/gpg.conf
}

addkeyserver || error "Error adding keyservers to /etc/pacman.d/gnupg/gpg.conf"
#+end_src

* Receiving the PGP key
#+begin_src bash
receive_key() { \
    echo "#####################################"
    echo "## Adding PGP key C71486C31555B12E ##"
    echo "#####################################"
    sudo pacman-key --recv-key C71486C31555B12E
    sudo pacman-key --lsign-key C71486C31555B12E
}

receive_key || error "Error receiving PGP key C71486C31555B12E"
#+end_src

* Install the packages from repositories
All packages listed are either in the standard Arch repos or in the DTOS repos. All of these will be installed using pacman. =NOTE:= The package 'doom-emacs' will be installed using pacman, but because it requires user interaction during the installation process, it is not included in the array below.

#+begin_src bash
# Let's install each package listed in the pkglist.txt file.
sudo pacman --needed -Sy - < pkglist.txt
#+end_src

* Copy configs over from /etc/dtos into $HOME
While it would be easier to make packages that could install DTOS configs directly to the appropriate places in the $HOME folder, pacman does not allow for this.  Pacman is not allowed to touch $HOME ever!  The better way to do this is to install the configs in /etc/skel which is the standard directory to place such config files, but on many distros (for ex. Manjaro and Arco) /etc/skel is already used to store the distro's own config files.  So to avoid conflicts, all DTOS configs are placed in /etc/dtos and then copied over to $HOME.  A backup of config is created.  BEWARE!

=NOTE:= The /etc/dtos directory contains files and directories that are automatically copied over to a new user's home directory when such user is created by the 'useradd' or the 'adduser' program, depending on your Linux distro.
#+begin_src bash
echo "################################################################"
echo "## Copying DTOS configuration files from /etc/dtos into \$HOME ##"
echo "################################################################"
[ ! -d /etc/dtos ] && sudo mkdir /etc/dtos
[ -d /etc/dtos ] && mkdir ~/dtos-backup-$(date +%Y.%m.%d-%H%M) && cp -Rf /etc/dtos ~/dtos-backup-$(date +%Y.%m.%d-%H%M)
[ ! -d ~/.config ] && mkdir ~/.config
[ -d ~/.config ] && mkdir ~/.config-backup-$(date +%Y.%m.%d-%H%M) && cp -Rf ~/.config ~/.config-backup-$(date +%Y.%m.%d-%H%M)
cd /etc/dtos && cp -Rf . ~ && cd -
#+end_src

#+begin_src bash
# Change all scripts in .local/bin to be executable.
find $HOME/.local/bin -type f -print0 | xargs -0 chmod 775
#+end_src

* Install Doom Emacs
#+begin_src bash
echo "#########################################################"
echo "## Installing Doom Emacs. This may take a few minutes. ##"
echo "#########################################################"
[ -d ~/.emacs.d ] && mv ~/.emacs.d ~/.emacs.d.bak.$(date +"%Y%m%d_%H%M%S")
[ -f ~/.emacs ] && mv ~/.emacs ~/.emacs.bak.$(date +"%Y%m%d_%H%M%S")
git clone --depth 1 https://github.com/hlissner/doom-emacs ~/.emacs.d
~/.emacs.d/bin/doom install
#+end_src

* Copy pacman hooks
The following pacman hooks force xmonad to recompile every time there are updates to xmonad or the haskell libraries.
#+begin_src bash
[ ! -d /etc/pacman.d/hooks ] && sudo mkdir /etc/pacman.d/hooks
sudo cp /etc/dtos/.xmonad/pacman-hooks/recompile-xmonad.hook /etc/pacman.d/hooks/
sudo cp /etc/dtos/.xmonad/pacman-hooks/recompile-xmonadh.hook /etc/pacman.d/hooks/
#+end_src

* Compiling xmonad
=NOTE:= May not be needed if moving the pacman hooks works as expected.
#+begin_src bash
xmonad_recompile() { \
    echo "########################"
    echo "## Recompiling XMonad ##"
    echo "########################"
    xmonad --recompile
}

xmonad_recompile || error "Error recompiling Xmonad!"
#+end_src

* Compiling the xmonadctl script
#+begin_src bash
xmonadctl_compile() { \
    echo "####################################"
    echo "## Compiling the xmonadctl script ##"
    echo "####################################"
    ghc -dynamic "$HOME"/.xmonad/xmonadctl.hs
}

xmonadctl_compile || error "Error compiling the xmonadctl script!"
#+end_src

* Set default USER shell
#+begin_src bash
PS3='Set default user shell (enter number): '
shells=("fish" "bash" "zsh" "quit")
select choice in "${shells[@]}"; do
    case $choice in
         fish)
            sudo chsh $USER -s /bin/fish && \
            echo -e "$choice has been set as your default USER shell. \nLogging out is required for this take effect."
            break
            ;;
         bash)
            sudo chsh $USER -s /bin/bash && \
            echo -e "$choice has been set as your default USER shell. \nLogging out is required for this take effect."
            break
            ;;
         zsh)
            sudo chsh $USER -s /bin/zsh && \
            echo -e "$choice has been set as your default USER shell. \nLogging out is required for this take effect."
            break
            ;;
         quit)
            echo "User requested exit"
            break
            ;;
         *)
            echo "invalid option $REPLY"
            ;;
    esac
done

#+end_src
* Message stating that the installation is complete!
#+begin_src bash
loginmanager() { \
    dialog --colors --title "\Z5\ZbInstallation Complete!" --msgbox "\Z2Now logout of your current desktop environment or window manager and choose XMonad from your login manager.  ENJOY!" 10 60
}

loginmanager && echo "DTOS has been installed!"
#+end_src
